# -------------------------------------------------------------------------------------------------
# Global
# -------------------------------------------------------------------------------------------------
# Deployment environment: development or production
ENVIRONMENT=production

# Public IP or hostname where services will be reachable  
# (used by frontend to construct observability links)
PUBLIC_IP=your_ec2_public_ip_or_hostname

# -------------------------------------------------------------------------------------------------
# PostgreSQL Database (postgres service)
# -------------------------------------------------------------------------------------------------
POSTGRES_DB=devsecops_db
POSTGRES_USER=devsecops_user
POSTGRES_PASSWORD=secure_password_123
# POSTGRES_INITDB_ARGS can remain in compose, no need to define here

# -------------------------------------------------------------------------------------------------
# Backend API (backend service)
# -------------------------------------------------------------------------------------------------
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
DEBUG=false
HOST=0.0.0.0
PORT=5000
# Secret key for Flask sessions and CSRF; change for production
SECRET_KEY=dev-secret-key-change-in-production-$(date +%s)

# Elasticsearch for ELK stack integration
ELASTICSEARCH_URL=http://elasticsearch:9200

# Logstash host and port for logging
LOGSTASH_HOST=logstash
LOGSTASH_PORT=5044

# OpenTelemetry OTLP gRPC exporter endpoint (no http:// prefix)
OTEL_EXPORTER_OTLP_ENDPOINT=jaeger:4317
OTEL_EXPORTER_OTLP_INSECURE=true
OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# Jaeger HTTP trace ingestion endpoint
JAEGER_ENDPOINT=http://jaeger:14268/api/traces

# Application observability settings
SERVICE_NAME=devsecops-backend
LOG_LEVEL=INFO

# -------------------------------------------------------------------------------------------------
# Prometheus (prometheus service)
# -------------------------------------------------------------------------------------------------
# No additional environment variables required; Prometheus uses its own command flags

# -------------------------------------------------------------------------------------------------
# Grafana (grafana service)
# -------------------------------------------------------------------------------------------------
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin123
GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
GF_SECURITY_ALLOW_EMBEDDING=true
GF_SERVER_ROOT_URL=http://${PUBLIC_IP}:3000
GF_SERVER_HTTP_ADDR=0.0.0.0
GF_SERVER_HTTP_PORT=3000

# -------------------------------------------------------------------------------------------------
# Jaeger (jaeger service)
# -------------------------------------------------------------------------------------------------
# Enables OTLP collector and configures Elasticsearch backend
COLLECTOR_OTLP_ENABLED=true
SPAN_STORAGE_TYPE=elasticsearch
ES_SERVER_URLS=http://elasticsearch:9200
ES_CREATE_INDEX_TEMPLATES=true
ES_VERSION=8
ES_NUM_SHARDS=1
ES_NUM_REPLICAS=0
QUERY_BASE_PATH=/
QUERY_LOG_LEVEL=info
COLLECTOR_OTLP_GRPC_HOST_PORT=0.0.0.0:4317
COLLECTOR_OTLP_HTTP_HOST_PORT=0.0.0.0:4318
COLLECTOR_ZIPKIN_HOST_PORT=:9411
ES_INDEX_PREFIX=jaeger
ES_INDEX_DATE_SEPARATOR=-
ADMIN_HTTP_HOST_PORT=0.0.0.0:14269

# -------------------------------------------------------------------------------------------------
# Frontend (frontend service)
# -------------------------------------------------------------------------------------------------
# URL of the Backend API
BACKEND_URL=http://backend:5000

# Other dynamic settings (pulled from PUBLIC_IP and ENVIRONMENT)
