# Logstash Configuration
# Pipeline for processing application logs and sending to Elasticsearch

input {
  # HTTP input for direct log ingestion
  http {
    host => "0.0.0.0"
    port => 8080
    codec => json
  }
  
  # Beats input for log shippers
  beats {
    port => 5044
  }
  
  # TCP input for structured logs
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # Syslog input
  syslog {
    port => 514
  }
}

filter {
  # Parse JSON logs
  if [message] {
    json {
      source => "message"
      target => "parsed"
    }
  }
  
  # Add common fields
  mutate {
    add_field => {
      "[@metadata][index_prefix]" => "devsecops-logs"
      "environment" => "%{[parsed][environment]}"
      "service_name" => "%{[parsed][service_name]}"
    }
  }
  
  # Parse timestamp
  if [parsed][timestamp] {
    date {
      match => [ "[parsed][timestamp]", "ISO8601" ]
    }
  }
  
  # Extract trace information
  if [parsed][trace_id] {
    mutate {
      add_field => { "trace_id" => "%{[parsed][trace_id]}" }
    }
  }
  
  # Categorize log level
  if [parsed][levelname] {
    mutate {
      add_field => { "log_level" => "%{[parsed][levelname]}" }
    }
  }
  
  # Extract HTTP request information
  if [parsed][method] {
    mutate {
      add_field => {
        "http_method" => "%{[parsed][method]}"
        "http_path" => "%{[parsed][path]}"
        "http_status" => "%{[parsed][status_code]}"
        "response_time" => "%{[parsed][duration_ms]}"
      }
    }
  }
  
  # GeoIP enrichment for IP addresses
  if [parsed][remote_addr] {
    geoip {
      source => "[parsed][remote_addr]"
      target => "geoip"
    }
  }
  
  # User agent parsing
  if [parsed][user_agent] {
    useragent {
      source => "[parsed][user_agent]"
      target => "user_agent"
    }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "message", "host", "@version" ]
  }
}

output {
  # Output to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index_prefix]}-%{+YYYY.MM.dd}"
    template_name => "devsecops-logs"
    template_pattern => "devsecops-logs-*"
    template => {
      "index_patterns" => ["devsecops-logs-*"],
      "settings" => {
        "number_of_shards" => 1,
        "number_of_replicas" => 0,
        "index.refresh_interval" => "5s"
      },
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "trace_id" => { "type" => "keyword" },
          "log_level" => { "type" => "keyword" },
          "service_name" => { "type" => "keyword" },
          "environment" => { "type" => "keyword" },
          "http_method" => { "type" => "keyword" },
          "http_path" => { "type" => "keyword" },
          "http_status" => { "type" => "integer" },
          "response_time" => { "type" => "float" },
          "parsed" => { "type" => "object" }
        }
      }
    }
  }
  
  # Debug output (comment out in production)
  stdout {
    codec => rubydebug
  }
}
